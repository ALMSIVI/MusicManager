<Window x:Class="MusicManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicManager"
		xmlns:utils="clr-namespace:MusicManager.Utils"
        mc:Ignorable="d"
        Title="MusicManager" Height="540" Width="960">

	<Window.Resources>
		<Style x:Key="EmptyButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="Background" Value="#00000000"/>
			<Setter Property="BorderBrush" Value="#00000000"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<ContentPresenter 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        Margin="{TemplateBinding Padding}" 
                        RecognizesAccessKey="True" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Window.CommandBindings>
		<CommandBinding Command="ApplicationCommands.Open"
						Executed="OpenExecuted"/>
		<CommandBinding Command="ApplicationCommands.Delete"
						Executed="DeleteExecuted"/>
	</Window.CommandBindings>

	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="360"/>
			<ColumnDefinition/>
			<ColumnDefinition Width="200"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition/>
			<RowDefinition Height="40"/>
		</Grid.RowDefinitions>

		<Menu Grid.Row="0" Grid.ColumnSpan="3">
			<MenuItem Header="About">
				<MenuItem Name="menuAbout" Header="About" Click="MenuClicked"/>
				<MenuItem Name="menuSettings" Header="Settings" Click="MenuClicked"/>
			</MenuItem>
		</Menu>

		<!-- The place to control music play, open / drag music to list -->
		<Grid Name="gridPlayer" Grid.Column="0" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="50"/>
				<RowDefinition Height="60"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<Canvas Grid.Row="0" ClipToBounds="True">
				<StackPanel Name="panelHeader">
					<StackPanel.Resources>
						<Style TargetType="TextBlock">
							<Setter Property="FontSize" Value="30"/>
							<Setter Property="Height" Value="50"/>
							<Setter Property="Width"
									Value="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}"/>
						</Style>
					</StackPanel.Resources>
					
					<TextBlock Name="infoTitle">MusicManager</TextBlock>
					<TextBlock Name="infoArtist">Test 1</TextBlock>
					<TextBlock Name="infoAlbum">Test 2</TextBlock>
					<TextBlock Name="infoFormat">Test 3</TextBlock>
					<TextBlock Name="infoLength">Test 4</TextBlock>
				</StackPanel>
			</Canvas>
			<Border Grid.Row="0" BorderBrush="Black" BorderThickness="0 0 0 1"/>

			<DockPanel Grid.Row="1">
				<StackPanel DockPanel.Dock="Right">
					<TextBlock  FontSize="20"
							   VerticalAlignment="Top"
							   HorizontalAlignment="Right"
							   Margin="0 0 5 0"
							   TextWrapping="Wrap">00:00</TextBlock>
					<TextBlock  FontSize="25"
							   VerticalAlignment="Top"
							   HorizontalAlignment="Right"
							   Margin="0 0 5 0"
							   TextWrapping="Wrap">00:00</TextBlock>
				</StackPanel>

				<Slider Name="progressSlider" Margin="10 0 0 0"
							VerticalAlignment="Center"
							HorizontalAlignment="Stretch"
							IsMoveToPointEnabled="True"/>
			</DockPanel>
			<Border Grid.Row="1" BorderBrush="Black" BorderThickness="0 0 0 1"/>

			<!-- Play buttons -->
			<Grid Grid.Row="2">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="60"/>
					<ColumnDefinition Width="80"/>
					<ColumnDefinition Width="60"/>
					<ColumnDefinition Width="50"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>

				<Button Name="btnPrev" Grid.Column="0" Margin="10 0 0 0"
						Style="{DynamicResource EmptyButtonStyle}">
					<Image Source="pack://application:,,,/MusicManager;component/Icons/back.png"/>
				</Button>
				<Button Name="btnPlay" Grid.Column="1" Margin="5"
						Style="{DynamicResource EmptyButtonStyle}">
					<Image Source = "pack://application:,,,/MusicManager;component/Icons/play-button.png"/>
				</Button>
				<Button Name="btnNext" Grid.Column="2" Margin="0 0 10 0"
						Style="{DynamicResource EmptyButtonStyle}">
					<Image Source = "pack://application:,,,/MusicManager;component/Icons/next.png"/>
				</Button>
				<Image Name="btnVolume" Grid.Column="3" Margin="5 0 10 0"
					   Source="/MusicManager;component/Icons/speaker.png"/>
				<Slider Name="volumeSlider" Grid.Column="4"
						VerticalAlignment="Center" Margin="0 0 5 0"
						IsMoveToPointEnabled="True"
						Value="50" Maximum="100"/>
			</Grid>

			<ListBox Name="playlist" AllowDrop="True" Drop="MusicDrop"
					 utils:DragSelectionHelper.IsDragSelectionEnabled="true"
					 Grid.Row="3">
				<ListBox.ItemContainerStyle>
					<Style TargetType="ListBoxItem">
						<Style.Triggers>
							<Trigger Property="ListBoxItem.IsMouseOver" Value="True">
								<Setter Property="utils:DragSelectionHelper.IsDragSelecting" Value="True" />
							</Trigger>

							<Trigger Property="Name" Value="defaultItem">
								<Setter Property="ToolTip" 
										Value="Drag or Open music files to the list..."/>
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu IsEnabled="False" Visibility="Hidden"/>
									</Setter.Value>
								</Setter>
							</Trigger>
						</Style.Triggers>

						<Setter Property="utils:DragSelectionHelper.IsDragSelecting" Value="False" />
						<Setter Property="ToolTip">
							<Setter.Value>
								<StackPanel>
									<TextBlock Text="{Binding Path=Title, StringFormat=Title: {0}}"/>
									<TextBlock Text="{Binding Path=Artist, StringFormat=Artist: {0}}"/>
									<TextBlock Text="{Binding Path=Album, StringFormat=Album: {0}}"/>
									<TextBlock Text="{Binding Path=Format, StringFormat=Format: {0}}"/>
									<TextBlock Text="{Binding Path=Length, StringFormat=Length: {0}}"/>
									<TextBlock Text="{Binding Path=Filename, StringFormat=Filename: {0}}"/>
								</StackPanel>
							</Setter.Value>
						</Setter>

						<Setter Property="ContextMenu">
							<Setter.Value>
								<ContextMenu>
									<MenuItem Header="Remove from list"
											  Command="ApplicationCommands.Delete"/>
								</ContextMenu>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>

				<ListBox.ContextMenu>
					<ContextMenu>
						<MenuItem Header="Add Music" Command="ApplicationCommands.Open"
								  CommandTarget="{Binding Path=PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
					</ContextMenu>
				</ListBox.ContextMenu>

				<ListBoxItem Name="defaultItem" Content="Drag or Open..."/>
			</ListBox>

			<Border BorderThickness="0 0 1 0" BorderBrush="Black"
					Grid.RowSpan="4"/>
		</Grid>


		<!-- Add and Delete -->
		<Grid Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>

			<Button Grid.Column="0"
					Command="ApplicationCommands.Open">Add Music</Button>
			<Button Grid.Column="1"
					Command="ApplicationCommands.Delete">Remove Music</Button>
		</Grid>

		<!-- The place to display tags and read options: 500 x 400 -->
		<Grid Grid.Column="1" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<Grid.Resources>
				<Style TargetType="TextBlock">
					<Setter Property="Margin" Value="10 5 0 5"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>

				<Style TargetType="TextBox">
					<Setter Property="Margin" Value="10 5 10 5"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>

				<Style TargetType="ComboBox">
					<Setter Property="Margin" Value="5"/>
					<Setter Property="VerticalAlignment" Value="Center"/>
				</Style>
			</Grid.Resources>

			<GroupBox Name="gridFile" Grid.Row="0" Header="File" Margin="5">
				<DockPanel>
					<TextBlock DockPanel.Dock="Left">Filename</TextBlock>
					<Button Name="btnGuess" DockPanel.Dock="Right"
							Margin="10 5 10 5"
							Click="ButtonClicked">Guess tag from filename</Button>
					<TextBox Name="txtFilename" IsReadOnly="True"/>
				</DockPanel>
			</GroupBox>

			<GroupBox Name="gridTag" Grid.Row="1" Header="Tag"
					  Margin="5 0 5 5" IsEnabled="False">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition Height="80"/>
					</Grid.RowDefinitions>

					<DockPanel Grid.Row="0">
						<TextBlock DockPanel.Dock="Left">Title</TextBlock>
						<TextBox Name ="txtTitle" DockPanel.Dock="Right"/>
					</DockPanel>

					<DockPanel Grid.Row="1">
						<TextBlock DockPanel.Dock="Left"
								   TextAlignment="Left">Album</TextBlock>
						<TextBox Name ="txtAlbum" DockPanel.Dock="Right"/>
					</DockPanel>

					<Grid Grid.Row="2">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="280"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<DockPanel Grid.Column="0">
							<TextBlock DockPanel.Dock="Left">Artist</TextBlock>
							<TextBox Name ="txtArtist" DockPanel.Dock="Right"/>
						</DockPanel>

						<DockPanel Grid.Column="1">
							<TextBlock DockPanel.Dock="Left">Track</TextBlock>
							<TextBox Name ="txtTrack" DockPanel.Dock="Right"/>
						</DockPanel>
					</Grid>

					<Grid Grid.Row="3">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="250"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<DockPanel Grid.Column="0">
							<TextBlock DockPanel.Dock="Left">Genre</TextBlock>
							<TextBox Name ="txtGenre" DockPanel.Dock="Right"/>
						</DockPanel>

						<DockPanel Grid.Column="1">
							<TextBlock DockPanel.Dock="Left">Year</TextBlock>
							<TextBox Name ="txtYear" DockPanel.Dock="Right"/>
						</DockPanel>
					</Grid>

					<DockPanel Grid.Row="4">
						<TextBlock DockPanel.Dock="Left"
								   VerticalAlignment="Top"
								   Margin="10 10 5 5">Comment</TextBlock>
						<TextBox Name ="txtComment" DockPanel.Dock="Right"
								 VerticalAlignment="Stretch"
								 Margin="10"
								 AcceptsReturn="True"/>
					</DockPanel>
				</Grid>
			</GroupBox>

			<!-- Options -->
			<GroupBox Grid.Row="2" Header="Options" Margin="5 0 5 5">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition/>
						<RowDefinition/>
					</Grid.RowDefinitions>

					<DockPanel Grid.Row="0">
						<TextBlock DockPanel.Dock="Left">Read Type Priority</TextBlock>
						<ComboBox Name="cbxPriority" DockPanel.Dock="Right">
							<ComboBoxItem IsSelected="True">APEv2 > ID3v2 > ID3v1</ComboBoxItem>
							<ComboBoxItem>ID3v2 > APEv2 > ID3v1</ComboBoxItem>
							<ComboBoxItem>ID3v1 > ID3v2 > APEv2</ComboBoxItem>
							<ComboBoxItem>ID3v1 > APEv2 > ID3v2</ComboBoxItem>
						</ComboBox>
					</DockPanel>

					<DockPanel Grid.Row="1">
						<TextBlock DockPanel.Dock="Left">ID3v2 Encoding Type</TextBlock>
						<ComboBox Name="cbxType" DockPanel.Dock="Right">
							<ComboBoxItem IsSelected="True">ISO-8859-1</ComboBoxItem>
							<ComboBoxItem>UTF-16</ComboBoxItem>
							<ComboBoxItem>UTF-8</ComboBoxItem>
						</ComboBox>
					</DockPanel>

					<DockPanel Grid.Row="2">
						<TextBlock DockPanel.Dock="Left">Write Type</TextBlock>
						<ComboBox Name="cbxWrite" DockPanel.Dock="Right">
							<ComboBoxItem>ID3v1</ComboBoxItem>
							<ComboBoxItem>ID3v2</ComboBoxItem>
							<ComboBoxItem>APEv2</ComboBoxItem>
							<ComboBoxItem IsSelected="True">ID3v1 &amp; ID3v2</ComboBoxItem>
							<ComboBoxItem>ID3v1 &amp; APEv2</ComboBoxItem>
							<ComboBoxItem>ID3v2 &amp; APEv2</ComboBoxItem>
						</ComboBox>
					</DockPanel>

					<CheckBox Name="chkPadding" Grid.Row="3" IsChecked="True"
							  VerticalAlignment="Center" Margin="10 5 0 5">Enable data padding when writing ID3v2</CheckBox>
				</Grid>
			</GroupBox>

			<Border BorderThickness="0 0 1 0" BorderBrush="Black" Grid.RowSpan="9"/>
		</Grid>


		<!-- The place to display cover art and streaming information -->
		<Grid Grid.Column="2" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="240"/>
				<RowDefinition/>
			</Grid.RowDefinitions>

			<!-- Art -->
			<StackPanel Grid.Row="0">
				<Image Name="imgCover" Height="200" AllowDrop="True"
					   Drop="CoverArtDrop"/>
				<UniformGrid Name="gridArt" IsEnabled="False" Rows="1"
							 Columns="2" Height="40">
					<Button Name="btnChoose" Click="ImageOpen">Choose Art</Button>
					<Button Name="btnDelArt">Delete Art</Button>
				</UniformGrid>
			</StackPanel>

			<!-- Streaming -->
			<Grid IsEnabled="False" Grid.Row="1">
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<Grid.Resources>
					<Style TargetType="TextBlock">
						<Setter Property="TextAlignment" Value="Center"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="Width" Value="80"/>
						<Setter Property="DockPanel.Dock" Value="Left"/>
					</Style>

					<Style TargetType="TextBox">
						<Setter Property="HorizontalAlignment" Value="Stretch"/>
						<Setter Property="VerticalAlignment" Value="Center"/>
						<Setter Property="Margin" Value="10 5 10 5"/>
						<Setter Property="DockPanel.Dock" Value="Right"/>
					</Style>
				</Grid.Resources>

				<DockPanel Grid.Row="0">
					<TextBlock>Encoding</TextBlock>
					<TextBox Name="txtEncode"/>
				</DockPanel>

				<DockPanel Grid.Row="1">
					<TextBlock>Channel</TextBlock>
					<TextBox Name="txtChannel"/>
				</DockPanel>

				<DockPanel Grid.Row="2">
					<TextBlock>Sample Rate</TextBlock>
					<TextBox Name="txtSampleRate"/>
				</DockPanel>

				<DockPanel Grid.Row="3">
					<TextBlock>Bits</TextBlock>
					<TextBox Name="txtBits"/>
				</DockPanel>

				<DockPanel Grid.Row="4">
					<TextBlock>Bit rate</TextBlock>
					<TextBox Name="txtBitRate"/>
				</DockPanel>

				<DockPanel Grid.Row="5">
					<TextBlock>Length</TextBlock>
					<TextBox Name="txtLength"/>
				</DockPanel>

				<DockPanel Grid.Row="6">
					<TextBlock>Gain</TextBlock>
					<TextBox Name="txtGain"/>
				</DockPanel>
			</Grid>
		</Grid>

		<!-- Buttons at the Property part -->
		<Grid x:Name="SongOptions" IsEnabled="False" Grid.Column="1"
			  Grid.ColumnSpan="2" Grid.Row="2">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>

			<Button Name="btnFormer" Grid.Column="0">Previous Song</Button>
			<Button Name="btnLatter" Grid.Column="1">Next Song</Button>
			<Button Name="btnReread" Grid.Column="2">Reload Song</Button>
			<Button Name="btnMore" Grid.Column="3" Click="ButtonClicked">More Info</Button>
			<Button Name="btnEdit" Click='ButtonClicked' Grid.Column="4">Edit Tag</Button>
			<!-- Can be changed to Save info -->
			<Button Name="btnConvert" Grid.Column="5" Click="ButtonClicked">Convert</Button>
		</Grid>
	</Grid>
</Window>
